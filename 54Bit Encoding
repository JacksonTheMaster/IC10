main:
### Configuration and Definitions ###

define REGISTERSIZE 54  # Total bits in the register (fixed at 54)

# Define the numbers to encode
define NUMBER1 -35184372088832
define NUMBER2 -127
# Define the number of bits allocated to NUMBER2
define SHIFTBITS 8

# Information about different SHIFTBITS settings:
#When SHIFTBITS = 16
#NUMBER1 (54 - 16 = 38 bits) Range: -137438953471 to 137438953471
#NUMBER2 (16 bits) Range: -32767 to 32767
#When SHIFTBITS = 8
#NUMBER1 (54 - 8 = 46 bits) Range: -35184372088831 to 35184372088831
#NUMBER2 (8 bits) Range: -127 to 127
#When SHIFTBITS = 4
#NUMBER1 (54 - 4 = 50 bits) Range: -562949953421311 to 562949953421311
#NUMBER2 (4 bits) Range: -7 to 7

# Alias registers for mask and shift calculations
alias SHIFTBITSDECIMAL r15
alias SHIFTLEFT r14

### Compute 2^SHIFTBITS for SHIFTBITSDECIMAL ###
move SHIFTBITSDECIMAL 1
sll SHIFTBITSDECIMAL SHIFTBITSDECIMAL SHIFTBITS
sub SHIFTBITSDECIMAL SHIFTBITSDECIMAL 1
sub SHIFTLEFT REGISTERSIZE SHIFTBITS
### Encoding NUMBER1 and NUMBER2

# Load the first number (NUMBER1)
move r0 NUMBER1          # Load NUMBER1 into r0

# Shift NUMBER1 to the left to make room for NUMBER2
sla r0 r0 SHIFTBITS             # Shift NUMBER1 left by 16 bits

# Load the second number (NUMBER2)
move r1 NUMBER2          # Load NUMBER2 into r1

# Mask NUMBER2 to keep only the lower SHIFTBITS bits
and r1 r1 SHIFTBITSDECIMAL

# Combine the two numbers using bitwise OR (not AND!)
or r0 r0 r1              # r0 now contains the combined number

# Store the combined result in r2 for decoding later
move r2 r0               # Store the combined number in r2
#s db Setting r2          # Output the combined number for debugging
#sleep 2

### Decoding the combined number

# Retrieve NUMBER1 by shifting right by SHIFTBITS (arithmetic shift to preserve sign)
sra r3 r2 SHIFTBITS
s db Setting r3          # Output the decoded NUMBER1
sleep 2

# Retrieve NUMBER2 by masking the lower SHIFTBITS bitse
and r4 r2 SHIFTBITSDECIMAL
# Sign-extend the 16-bit NUMBER2 to the register size
sla r4 r4 SHIFTLEFT # Shift left to align the sign bit
sra r4 r4 SHIFTLEFT # Arithmetic shift right to propagate the sign bit
#INFO
#In an arithmetic shift right, the bits are shifted and the sign bit
#wich is the most significant bit gets duplicated
#to maintain the sign of the original number.
s db Setting r4          # Output the decoded NUMBER2
sleep 2

j main                   # Loop back to main
